C51 COMPILER V7.50   MAIN                                                                  09/01/2018 10:58:32 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          /*********************************************************************************************
   3          程序名： 　　 LCD-1602显示函数
   4          编写人： 　　 Jaden
   5          编写时间：　　2018年8月29日
   6          硬件支持：　　STC12C2052AD 12MHz
   7          接口说明：　　  
   8          修改日志：　　
   9          　　NO.1-                                                               
  10          /*********************************************************************************************
  11          说明：
  12          
  13          /*********************************************************************************************/#include<re
             -g52.h>
  14          #include<reg52.h>
  15          #define uchar unsigned char
  16          #define uint unsigned int
  17          
  18          #define LCD  P0
  19          sbit LCD_RD = P2^6;             //数据/命令操作
  20          sbit LCD_WR = P2^5;             //读/写操作
  21          sbit LCD_EN = P2^7;     //使能操作
  22          
  23          
  24          
  25          
  26          void LCD_init();
  27          void DELAY_MS(uint T);
  28          void LCD_write_data(uchar cmd);
  29          void LCD_write_cmd(uchar cmd);
  30          uchar LCD_read_bit_Busy(void);
  31          void LCD_write_str(uchar x,uchar y, uchar *str);
  32          /*********************************************************************************************
  33          函数名：毫秒级CPU延时函数
  34          调  用：DELAY_MS (?);
  35          参  数：1~65535（参数不可为0）
  36          返回值：无
  37          结  果：占用CPU方式延时与参数数值相同的毫秒时间
  38          备  注：应用于1T单片机时i<600，应用于12T单片机时i<125
  39          /*********************************************************************************************/
  40          void DELAY_MS(uint T)
  41          {
  42   1              uint i;
  43   1              while(T-- !=0)  
  44   1              {
  45   2                      for(i=0; i<600; i++);
  46   2              }
  47   1      }
  48          
  49          /*********************************************************************************************
  50          函数名：LCD-1602初始化函数
  51          调  用：LCD_init()
  52          参  数: 无
  53          返回值：无
  54          结  果：
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 10:58:32 PAGE 2   

  55          备  注：
  56          /*********************************************************************************************/
  57          void LCD_init()
  58          {
  59   1              LCD_write_cmd(0x38);            //16*2 显示，5*7 点阵，8 位数据接口
  60   1              LCD_write_cmd(0x0C);            //显示器开，光标关闭
  61   1              LCD_write_cmd(0x06);            //文字不动，地址自动+1
  62   1              LCD_write_cmd(0x01);            //清屏
  63   1              DELAY_MS(5);
  64   1      
  65   1      
  66   1      }
  67          /*********************************************************************************************
  68          函数名：LCD-1602写指令
  69          调  用：LCD_write_cmd(uchar cmd)
  70          参  数: 写入指令
  71          返回值：无
  72          结  果：
  73          备  注：
  74          /*********************************************************************************************/
  75          void LCD_write_cmd(uchar cmd)
  76          {
  77   1              
  78   1              LCD_EN=0;                       //使能端拉低
  79   1              LCD_RD=0;                       //1数据，0指令
  80   1              LCD_WR=0;                       //1读操作，0写操作
  81   1              LCD=cmd;                        //将数据摆放上对应的PIO口
  82   1              LCD_EN=1;                       //使能端拉高    
  83   1              DELAY_MS(1);    //延时1ms左右
  84   1              LCD_EN=0;                       //使能端拉低
  85   1      
  86   1      
  87   1      
  88   1      }
  89          /*********************************************************************************************
  90          函数名：LCD-1602写指数据
  91          调  用：LCD_write_data(uchar dat)
  92          参  数: 写入指令
  93          返回值：无
  94          结  果：
  95          备  注：
  96          /*********************************************************************************************/
  97          void LCD_write_data(uchar dat)
  98          {
  99   1              LCD_EN=0;                       //使能端拉低
 100   1              LCD_RD=1;                       //1数据，0指令
 101   1              LCD_WR=0;                       //1读操作，0写操作
 102   1              LCD=dat;                        //将数据摆放上对应的PIO口
 103   1              LCD_EN=1;                       //使能端拉高    
 104   1              DELAY_MS(1);    //延时1ms左右
 105   1              LCD_EN=0;                       //使能端拉低
 106   1      
 107   1      
 108   1      }
 109          
 110          /*********************************************************************************************
 111          函数名：LCD-1602读状态
 112          调  用：uchar LCD_read_state(void)
 113          参  数: 读状态
 114          返回值：返回状态位
 115          结  果：
 116          备  注：
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 10:58:32 PAGE 3   

 117          /*********************************************************************************************/
 118          uchar LCD_read_bit_Busy(void)
 119          {
 120   1              bit busy_flag =0;
 121   1              LCD_EN=0;                       //使能端拉低
 122   1              LCD_RD=0;                       //1数据，0指令
 123   1              LCD_WR=1;                       //1读操作，0写操作
 124   1              LCD_EN=1;                       //使能端拉高
 125   1              busy_flag =(bit)(P0 & 0x80);//获取高位状态，如果为1，标示忙。   
 126   1              DELAY_MS(1);    //延时1ms左右
 127   1              LCD_EN=0;                       //使能端拉低
 128   1              return busy_flag;       //返回状态位
 129   1      
 130   1      }
 131          
 132          /*********************************************************************************************
 133          函数名：LCD-1602写入字节
 134          调  用：LCD_write_str(uchar x,uchar y, uchar dat)
 135          参  数: 读状态
 136          返回值：返回状态位
 137          结  果：
 138          备  注：
 139          /*********************************************************************************************/
 140          void LCD_write_str(uchar x,uchar y, uchar *str)
 141          {
 142   1              uchar addr;
 143   1              if( LCD_read_bit_Busy()!=1)
 144   1              {
 145   2                      if(x==1)
 146   2                      {
 147   3                              addr=0x00+y;    
 148   3                      }
 149   2                      if(x==2)
 150   2                      {
 151   3                              addr=0x40+y;
 152   3                      }
 153   2                      LCD_write_cmd(addr|0x80);
 154   2                      while(*str!='\0')
 155   2                      {
 156   3                              LCD_write_data(*str++); 
 157   3                      }
 158   2              }
 159   1      }
 160          
 161          /*********************************************************************************************
 162          函数名：主函数
 163          调  用：main(void)
 164          参  数: 
 165          返回值：
 166          结  果：
 167          备  注：
 168          /*********************************************************************************************/
 169          
 170          main(void)
 171          {
 172   1              LCD_init();
 173   1              DELAY_MS(200);
 174   1              LCD_write_str(1,1,"Huang Hai Yuan");
 175   1              LCD_write_str(2,2,"I Love You!");
 176   1              while(1);
 177   1              
 178   1      }
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 10:58:32 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    227    ----
   CONSTANT SIZE    =     27    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
