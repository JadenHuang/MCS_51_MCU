C51 COMPILER V7.50   MAIN                                                                  09/01/2018 20:44:04 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************************
   2          程序名： 　　 DS1302实时时钟
   3          编写人： 　　 Jaden
   4          编写时间：　　2018年9月01日
   5          硬件支持：　　STC12C2052AD 12MHz
   6          接口说明：　　  
   7          修改日志：　　
   8          　　NO.1-                                                               
   9          /*********************************************************************************************
  10          说明：
  11          
  12          /*********************************************************************************************/
  13          #include<reg52.h>
  14          #define uchar unsigned char
  15          #define uint unsigned int
  16          
  17          uchar code LCD_CODE[]={'0','1','2','3','4','5','6','7','8','9'};
  18          
  19          
  20          
  21          #define LCD  P0
  22          sbit LCD_RD = P2^6;             //数据/命令操作
  23          sbit LCD_WR = P2^5;             //读/写操作
  24          sbit LCD_EN = P2^7;     //使能操作
  25          
  26          
  27          sbit ACC0 = ACC^0;
  28          sbit ACC7 = ACC^7;
  29          
  30          sbit DS_SCLK = P3^6;            //时钟信号
  31          sbit DS_CE = P3^5;                      //复位端
  32          sbit DS_IO = P3^4;                      //数据端
  33          
  34          void LCD_init();
  35          void DELAY_MS(uint T);
  36          void LCD_write_data(uchar cmd);
  37          void LCD_write_cmd(uchar cmd);
  38          uchar LCD_read_bit_Busy(void);
  39          void LCD_write_str(uchar x,uchar y, uchar *str);
  40          
  41          void LCD_Display_time();
  42          void read_data();
  43          void init_DS1302();
  44          uchar DS1302_read_dat(uchar add);
  45          void DS1302_write_dat(uchar add, uchar dat);
  46          uchar DS1302_read_byte(uchar cd);
  47          void DS1302_write_byte(uchar cd);
  48          
  49          
  50          
  51          uchar T_sec , T_sec1 , T_sec2;
  52          uchar T_min , T_min1 , T_min2;
  53          uchar T_hou , T_hou1 , T_hou2;
  54          uchar T_dat , T_dat1 , T_dat2;
  55          uchar T_mon , T_mon1 , T_mon2;
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 20:44:04 PAGE 2   

  56          uchar T_week , T_week1;
  57          uchar T_year , T_year1, T_year2;
  58          
  59          
  60          
  61          /*********************************************************************************************
  62          函数名：毫秒级CPU延时函数
  63          调  用：DELAY_MS (?);
  64          参  数：1~65535（参数不可为0）
  65          返回值：无
  66          结  果：占用CPU方式延时与参数数值相同的毫秒时间
  67          备  注：应用于1T单片机时i<600，应用于12T单片机时i<125
  68          /*********************************************************************************************/
  69          void DELAY_MS(uint T)
  70          {
  71   1              uint i;
  72   1              while(T-- !=0)
  73   1              {
  74   2                      for(i=0;i<600;i++);
  75   2              }
  76   1      }
  77          
  78          
  79          /*********************************************************************************************
  80          函数名：LCD-1602初始化函数
  81          调  用：LCD_init()
  82          参  数: 无
  83          返回值：无
  84          结  果：
  85          备  注：
  86          /*********************************************************************************************/
  87          void LCD_init()
  88          {
  89   1              LCD_write_cmd(0x38);            //16*2 显示，5*7 点阵，8 位数据接口
  90   1              LCD_write_cmd(0x0C);            //显示器开，光标关闭
  91   1              LCD_write_cmd(0x06);            //文字不动，地址自动+1
  92   1              LCD_write_cmd(0x01);            //清屏
  93   1              DELAY_MS(5);
  94   1      
  95   1      
  96   1      }
  97          /*********************************************************************************************
  98          函数名：LCD-1602写指令
  99          调  用：LCD_write_cmd(uchar cmd)
 100          参  数: 写入指令
 101          返回值：无
 102          结  果：
 103          备  注：
 104          /*********************************************************************************************/
 105          void LCD_write_cmd(uchar cmd)
 106          {
 107   1              
 108   1              LCD_EN=0;                       //使能端拉低
 109   1              LCD_RD=0;                       //1数据，0指令
 110   1              LCD_WR=0;                       //1读操作，0写操作
 111   1              LCD=cmd;                        //将数据摆放上对应的PIO口
 112   1              LCD_EN=1;                       //使能端拉高    
 113   1              DELAY_MS(1);    //延时1ms左右
 114   1              LCD_EN=0;                       //使能端拉低
 115   1      
 116   1      
 117   1      
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 20:44:04 PAGE 3   

 118   1      }
 119          /*********************************************************************************************
 120          函数名：LCD-1602写指数据
 121          调  用：LCD_write_data(uchar dat)
 122          参  数: 写入指令
 123          返回值：无
 124          结  果：
 125          备  注：
 126          /*********************************************************************************************/
 127          void LCD_write_data(uchar dat)
 128          {
 129   1              LCD_EN=0;                       //使能端拉低
 130   1              LCD_RD=1;                       //1数据，0指令
 131   1              LCD_WR=0;                       //1读操作，0写操作
 132   1              LCD=dat;                        //将数据摆放上对应的PIO口
 133   1              LCD_EN=1;                       //使能端拉高    
 134   1              DELAY_MS(1);    //延时1ms左右
 135   1              LCD_EN=0;                       //使能端拉低
 136   1      
 137   1      
 138   1      }
 139          
 140          /*********************************************************************************************
 141          函数名：LCD-1602读状态
 142          调  用：uchar LCD_read_state(void)
 143          参  数: 读状态
 144          返回值：返回状态位
 145          结  果：
 146          备  注：
 147          /*********************************************************************************************/
 148          uchar LCD_read_bit_Busy(void)
 149          {
 150   1              bit busy_flag =0;
 151   1              LCD_EN=0;                       //使能端拉低
 152   1              LCD_RD=0;                       //1数据，0指令
 153   1              LCD_WR=1;                       //1读操作，0写操作
 154   1              LCD_EN=1;                       //使能端拉高
 155   1              busy_flag =(bit)(P0 & 0x80);//获取高位状态，如果为1，标示忙。   
 156   1              DELAY_MS(1);    //延时1ms左右
 157   1              LCD_EN=0;                       //使能端拉低
 158   1              return busy_flag;       //返回状态位
 159   1      
 160   1      }
 161          
 162          /*********************************************************************************************
 163          函数名：LCD-1602写入字节
 164          调  用：LCD_write_str(uchar x,uchar y, uchar dat)
 165          参  数: 读状态
 166          返回值：返回状态位
 167          结  果：
 168          备  注：
 169          /*********************************************************************************************/
 170          void LCD_write_str(uchar x,uchar y, uchar *str)
 171          {
 172   1              uchar addr;
 173   1              if( LCD_read_bit_Busy()!=1)
 174   1              {
 175   2                      if(x==1)
 176   2                      {
 177   3                              addr=0x00+y;    
 178   3                      }
 179   2                      if(x==2)
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 20:44:04 PAGE 4   

 180   2                      {
 181   3                              addr=0x40+y;
 182   3                      }
 183   2                      LCD_write_cmd(addr|0x80);
 184   2                      while(*str!='\0')
 185   2                      {
 186   3                              LCD_write_data(*str++); 
 187   3                      }
 188   2              }
 189   1      }
 190          
 191          /*********************************************************************************************
 192          
 193          /*********************************************************************************************
 194          函数名：DS1302写字节
 195          调  用：DS1302_write_byte(uchar cd)
 196          参  数: 写入字节
 197          返回值：无
 198          结  果：
 199          备  注：
 200          /*********************************************************************************************/
 201          void DS1302_write_byte(uchar cd)
 202          {
 203   1              uchar i;
 204   1              ACC = cd;
 205   1              for(i=8;i>0;i--)
 206   1              {
 207   2                      DS_IO = ACC0;
 208   2                      DS_SCLK =1;
 209   2                      DS_SCLK=0;
 210   2                      ACC=ACC>>1;     
 211   2              }
 212   1      }
 213          
 214          /*********************************************************************************************
 215          函数名：DS1302读字节
 216          调  用：ucahr DS1302_read_byte(void)
 217          参  数: 读取字节
 218          返回值：返回读出来的字节
 219          结  果：
 220          备  注：
 221          /*********************************************************************************************/
 222          uchar DS1302_read_byte()
 223          {
 224   1              uchar i;
 225   1              for(i=8;i>0;i--)
 226   1              {
 227   2                      ACC=ACC>>1;
 228   2                      ACC7 = DS_IO;
 229   2                      DS_SCLK = 1;
 230   2                      DS_SCLK = 0;
 231   2              }
 232   1              return (ACC);
 233   1      }
 234          
 235          /*********************************************************************************************
 236          函数名：DS1302写数据
 237          调  用：DS1302_write_dat(uchar add,uchar dat)
 238          参  数: 写入数据
 239          返回值：void
 240          结  果：
 241          备  注：
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 20:44:04 PAGE 5   

 242          /*********************************************************************************************/
 243          void DS1302_write_dat(uchar add, uchar dat)
 244          {
 245   1              DS_CE=0;
 246   1              DS_SCLK=0;
 247   1              DS_CE=1;
 248   1              DS1302_write_byte(add);
 249   1              DS1302_write_byte(dat);
 250   1      
 251   1      
 252   1              DS_SCLK=1;
 253   1              DS_CE=0;
 254   1      
 255   1      }
 256          
 257          /*********************************************************************************************
 258          函数名：DS1302读数据
 259          调  用：DS1302_write_dat(uchar add)
 260          参  数: 写入指令
 261          返回值：读取数据
 262          结  果：返回数据
 263          备  注：
 264          /*********************************************************************************************/
 265          uchar DS1302_read_dat(uchar add)
 266          {
 267   1              uchar dat;
 268   1              DS_CE=0;
 269   1              DS_SCLK=0;
 270   1              DS_CE=1;
 271   1              DS1302_write_byte(add);
 272   1              dat=DS1302_read_byte();
 273   1      
 274   1      
 275   1              DS_SCLK=1;
 276   1              DS_CE=0;
 277   1              return dat;
 278   1      
 279   1      }
 280          
 281          
 282          /*********************************************************************************************
 283          函数名：初始化DS1302函数
 284          调  用：init_DS1302()
 285          参  数:
 286          返回值:
 287          结  果：
 288          备  注：
 289          /*********************************************************************************************/
 290          void init_DS1302()
 291          {
 292   1              DS1302_write_dat(0x8e,0x00); //关闭写保护
 293   1              DS1302_write_dat(0x90,0xaa); //使用两个二极管，4K限流电阻
 294   1              DS1302_write_dat(0x80,0x00); //写入秒数据
 295   1              DS1302_write_dat(0x82,0x43); //写入分钟
 296   1              DS1302_write_dat(0x84,0x20); //写入小时
 297   1              DS1302_write_dat(0x86,0x01); //写入日期
 298   1              DS1302_write_dat(0x88,0x09); //写入月份
 299   1              DS1302_write_dat(0x8a,0x06); //写入星期
 300   1              DS1302_write_dat(0x8c,0x18); //写入年
 301   1              DS1302_write_dat(0x8e,0x80); //打开写保护
 302   1              
 303   1      
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 20:44:04 PAGE 6   

 304   1              
 305   1              
 306   1      }
 307          
 308          
 309          /*********************************************************************************************
 310          函数名：读取相关数据
 311          调  用：read_data()
 312          参  数: 
 313          返回值:
 314          结  果：
 315          备  注：
 316          /*********************************************************************************************/
 317          void read_data()
 318          {
 319   1              T_sec = DS1302_read_dat(0x81);
 320   1              T_sec1 = T_sec & 0x0f;
 321   1              T_sec2 = (T_sec >> 4);
 322   1      
 323   1              T_min = DS1302_read_dat(0x83);
 324   1              T_min1 = T_min & 0x0f;
 325   1              T_min2 = (T_min >> 4);
 326   1      
 327   1              T_hou = DS1302_read_dat(0x85);
 328   1              T_hou1 = T_hou & 0x0f;
 329   1              T_hou2 = (T_hou  >> 4);
 330   1      
 331   1              T_dat = DS1302_read_dat(0x87);
 332   1              T_dat1 = T_dat & 0x0f;
 333   1              T_dat2 = (T_dat >> 4);
 334   1      
 335   1              T_mon= DS1302_read_dat(0x89);
 336   1              T_mon1 = T_mon & 0x0f;
 337   1              T_mon2 = (T_mon >> 4);
 338   1      
 339   1              T_week = DS1302_read_dat(0x8b);
 340   1              T_week1 = T_week & 0x0f;
 341   1      
 342   1          T_year = DS1302_read_dat(0x8d);
 343   1              T_year1 = T_year & 0x0f;
 344   1              T_year2 = (T_year>>4);
 345   1      
 346   1      
 347   1      
 348   1      
 349   1              
 350   1      
 351   1      
 352   1      
 353   1              
 354   1      
 355   1              
 356   1      
 357   1      
 358   1      
 359   1              
 360   1              
 361   1      }
 362          
 363          /*********************************************************************************************
 364          函数名：LCD_1602显示相关时间
 365          调  用：LCD_Displsy_time()
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 20:44:04 PAGE 7   

 366          参  数: 
 367          返回值:
 368          结  果：
 369          备  注：
 370          /*********************************************************************************************/
 371          void LCD_Display_time()
 372          {
 373   1              LCD_write_cmd(0x88);
 374   1              LCD_write_data(LCD_CODE[T_year2]);
 375   1      
 376   1              LCD_write_cmd(0x89);
 377   1              LCD_write_data(LCD_CODE[T_year1]);
 378   1      
 379   1              LCD_write_cmd(0x8a);
 380   1              LCD_write_data('/');
 381   1      
 382   1              LCD_write_cmd(0x8b);
 383   1              LCD_write_data(LCD_CODE[T_mon2]);
 384   1      
 385   1              LCD_write_cmd(0x8c);
 386   1              LCD_write_data(LCD_CODE[T_mon1]);
 387   1      
 388   1              LCD_write_cmd(0x8d);
 389   1              LCD_write_data('/');
 390   1      
 391   1              LCD_write_cmd(0x8e);
 392   1              LCD_write_data(LCD_CODE[T_dat2]);
 393   1      
 394   1              LCD_write_cmd(0x8f);
 395   1              LCD_write_data(LCD_CODE[T_dat1]);
 396   1      /*******************************************/
 397   1      
 398   1              LCD_write_cmd(0xc5);
 399   1              LCD_write_data(LCD_CODE[T_week1]);
 400   1      
 401   1              LCD_write_cmd(0xc8);
 402   1              LCD_write_data(LCD_CODE[T_hou2]);
 403   1      
 404   1              LCD_write_cmd(0xc9);
 405   1              LCD_write_data(LCD_CODE[T_hou1]);
 406   1      
 407   1              LCD_write_cmd(0xca);
 408   1              LCD_write_data(':');
 409   1      
 410   1              LCD_write_cmd(0xcb);
 411   1              LCD_write_data(LCD_CODE[T_min2]);
 412   1      
 413   1              LCD_write_cmd(0xcc);
 414   1              LCD_write_data(LCD_CODE[T_min1]);
 415   1      
 416   1      
 417   1              LCD_write_cmd(0xcd);
 418   1              LCD_write_data(':');
 419   1      
 420   1              LCD_write_cmd(0xce);
 421   1              LCD_write_data(LCD_CODE[T_sec2]);
 422   1      
 423   1              LCD_write_cmd(0xcf);
 424   1              LCD_write_data(LCD_CODE[T_sec1]);
 425   1      }
 426          
 427          
C51 COMPILER V7.50   MAIN                                                                  09/01/2018 20:44:04 PAGE 8   

 428          /*********************************************************************************************
 429          函数名：主函数
 430          调  用：main(void)
 431          参  数: 
 432          返回值：
 433          结  果：
 434          备  注：
 435          /*********************************************************************************************/
 436          void main()
 437          {
 438   1              uchar i;
 439   1              LCD_init();
 440   1              DELAY_MS(10);
 441   1              //init_DS1302();
 442   1              DELAY_MS(10);
 443   1              LCD_write_str(1,0,"DS1302");
 444   1              LCD_write_str(2,1,"DAY-");
 445   1              DELAY_MS(10);
 446   1              i=0;
 447   1              while(1)
 448   1              {
 449   2      
 450   2                      //DELAY_MS(10);
 451   2                      if(i>=5)
 452   2                      {
 453   3                              i=0;
 454   3                              read_data();
 455   3      
 456   3                      }
 457   2                      LCD_Display_time();
 458   2                      i++;
 459   2              
 460   2      
 461   2              }
 462   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    725    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
